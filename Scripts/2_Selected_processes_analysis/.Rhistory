logFC_plus$filtered <- "no"
logFC_PLUS2 <- gather(logFC_plus, timepoint, log2FC, 1:3)
logFC_PLUS2$gene_ID <- rep(rownames(logFC_plus),3)
logFC_PLUS2$MT <- "MT+"
logFC_PLUS2$significant <- c(genes$t15, genes$t1, genes$t3)
## Both
both <- rbind(logFC_PLUS2, logFC_min2)
both <- both[both$significant == 1,]
both$MT <- relevel(as.factor(both$MT), "MT+")
both$timepoint[both$timepoint == "t15"] <- "15min"
both$timepoint[both$timepoint == "t1"] <- "1h"
both$timepoint[both$timepoint == "t3"] <- "3h"
both$timepoint <- relevel(as.factor(both$timepoint), "15min")
both_plus <- both
DE_PLUS <- ggplot() +
geom_jitter(aes(y = (both_plus$log2FC), x = both_plus$timepoint, fill = both_plus$MT, shape = both_plus$filtered),  size = 1.2,  width = 0.2, height = 0, stroke = 0.6) +
geom_hline(yintercept=(deltalog2), color = "firebrick3") +
geom_hline(yintercept=-(deltalog2), color = "firebrick3") +
xlab("Time point") +
ylab("log2(FC)") +
labs(fill = "Mating Type") +
guides(shape=FALSE, fill = guide_legend(override.aes = list(shape = 21))) +
scale_shape_manual(values=c(21,23)) +
theme_bw() +
ggtitle("SRPs") + theme(plot.title = element_text(colour = "#B83C3C", size = 17)) +
theme(plot.title = element_text(hjust = 0.5)) +
scale_fill_manual(values = c("#b83c3c", "#4877c1")) +
coord_cartesian(ylim = c(-11,11))
DE_PLUS
# Loading other significance matrices from the "both" analysis
res_plus <- read.delim("Significance_matrices_for_plotting/SRB_resPlus.txt", sep = "")
res_min <-  read.delim("Significance_matrices_for_plotting/SRB_resMin.txt", sep = "")
deltalog2 <- log2(3)
names <- SRB
## MT+
genes_PLUS <- res_plus[names,]
rownames(genes_PLUS) <- names
logFC_plus <- logFcMatrix_plus[names,]
logFC_PLUS2 <- gather(logFC_plus, timepoint, log2FC, 1:3)
logFC_PLUS2$gene_ID <- rep(rownames(logFC_plus),3)
logFC_PLUS2$MT <- "MT+"
logFC_PLUS2$significant <- c(genes_PLUS$t15, genes_PLUS$t1, genes_PLUS$t3)
## MT-
genes_MIN <- res_min[names,]
rownames(genes_MIN) <- names
logFC_MIN <- logFcMatrix_min[names,]
logFC_MIN2 <- gather(logFC_MIN, timepoint, log2FC, 1:3)
logFC_MIN2$gene_ID <- rep(rownames(logFC_MIN),3)
logFC_MIN2$MT <- "MT-"
logFC_MIN2$significant <- c(genes_MIN$t15, genes_MIN$t1, genes_MIN$t3)
## Both
both <- rbind(logFC_PLUS2, logFC_MIN2)
both <- both[both$significant == 1,]
both$MT <- relevel(as.factor(both$MT), "MT+")
both$timepoint[both$timepoint == "t15"] <- "15min"
both$timepoint[both$timepoint == "t1"] <- "1h"
both$timepoint[both$timepoint == "t3"] <- "3h"
both$timepoint <- factor(both$timepoint, levels = c("15min", "1h", "3h"))
both$timepoint
both_both <- both
DE_BOTH <- ggplot() +
geom_jitter(aes(y = (both_both$log2FC), x = both_both$timepoint, fill = both_both$MT),  shape = 21, size = 1.2,  width = 0.2, height = 0, stroke = 0.6) +
geom_hline(yintercept=(deltalog2), color = "firebrick3") +
geom_hline(yintercept=-(deltalog2), color = "firebrick3") +
xlab("Time point") +
ylab("log2(FC)") +
labs(fill = "Mating Type") +
guides( fill = guide_legend(override.aes = list(shape = 21))) +
theme_bw() +
ggtitle("SRBs") + theme(plot.title = element_text(size = 17)) +
theme(plot.title = element_text(hjust = 0.5)) +
scale_fill_manual(values = c("#b83c3c", "#4877c1")) +
scale_x_discrete(breaks = c("15min", "1h", "3h"), labels = c("15min", "1h", "3h"), drop = F) +
coord_cartesian(ylim = c(-11,11))
DE_BOTH
ggsave("BOTH.pdf", width = 5, height = 3)
both_both[both_both$gene_ID =="Sro299_g111470",]
DE_BOTH <- ggplot() +
geom_jitter(aes(y = (both_both$log2FC), x = both_both$timepoint, fill = both_both$MT),  shape = 21, size = 1.2,  width = 0.2, height = 0, stroke = 0.6) +
geom_hline(yintercept=(deltalog2), color = "firebrick3") +
geom_hline(yintercept=-(deltalog2), color = "firebrick3") +
xlab("Time point") +
ylab("log2(FC)") +
labs(fill = "Mating Type") +
guides( fill = guide_legend(override.aes = list(shape = 21))) +
theme_bw() +
ggtitle("SRBs") + theme(plot.title = element_text(size = 17)) +
theme(plot.title = element_text(hjust = 0.5)) +
scale_fill_manual(values = c("#b83c3c", "#4877c1")) +
scale_x_discrete(breaks = c("15min", "1h", "3h"), labels = c("15min", "1h", "3h"), drop = F) +
coord_cartesian(ylim = c(-11,11))
wd <- getwd()
dir <- dirname(dirname(wd))
logFcMatrix_min <-  as.data.frame(read.delim(paste0(dir,"/DE_matrices/log2_Fold_Changes_MT-_Moeys.txt"), header = TRUE, sep = "", row.names = 1, stringsAsFactors = FALSE))
logFcMatrix_plus <-  as.data.frame(read.delim(paste0(dir,"/DE_matrices/log2_Fold_Changes_MT+.txt"), header = TRUE, sep = "", row.names = 1, stringsAsFactors = FALSE))[1:3]
adjP_plus <- read.delim(paste0(dir, "/DE_matrices/Adjusted_P_values_MT+.txt"), sep = "", stringsAsFactors = F)
adjP_min <- read.delim(paste0(dir, "/DE_matrices/Adjusted_P_values_MT-_Moeys.txt"), sep = "", stringsAsFactors = F)
res_plus <-  read.delim("Significance_matrices_for_plotting/res_tr_PLUS.txt", sep ="")
res_min <-  read.delim("Significance_matrices_for_plotting/res_tr_MIN.txt", sep = "")
SRB <- as.character(read.xlsx(paste0(dir, "/Scripts/3_Integrative_analysis/SIP responsive genes complete list.xlsx"), sheetIndex = 1)$Gene_ID[1:52])
SRM <- as.character(read.xlsx(paste0(dir, "/Scripts/3_Integrative_analysis/SIP responsive genes complete list.xlsx"), sheetIndex = 2)$Gene_ID[1:70])
SRP <- as.character(read.xlsx(paste0(dir, "/Scripts/3_Integrative_analysis/SIP responsive genes complete list.xlsx"), sheetIndex = 3)$Gene_ID[1:12])
library(tidyr)
library(ggplot2)
names <- SRM
deltalog2 <- log2(3)
genes <- res_min[names,]
rownames(genes) <- names
logFC_PLUS <- logFcMatrix_plus[rownames(logFcMatrix_plus) %in% names,]
logFC_PLUS$filtered <- "no"
filtered <- names[!(names %in% rownames(logFcMatrix_plus))]
filtered_DF <- data.frame(filtered, 0,0, 0, "yes")
rownames(filtered_DF) <- filtered_DF[,1]
filtered_DF <- filtered_DF[-1]
colnames(filtered_DF) <- colnames(logFC_PLUS)
logFC_PLUS <- rbind(logFC_PLUS, filtered_DF)
logFC_PLUS2 <- gather(logFC_PLUS, timepoint, log2FC, 1:3)
logFC_PLUS2$gene_ID <- rep(rownames(logFC_PLUS),3)
logFC_PLUS2$MT <- "MT+"
logFC_PLUS2$significant <- 1
logFC_PLUS2 <- logFC_PLUS2[order(logFC_PLUS2$filtered, decreasing = T),]
## MT-
logFC_min <- logFcMatrix_min[rownames(logFcMatrix_min) %in% names,]
logFC_min$filtered <- "no"
logFC_PLUS2_min <- gather(logFC_min, timepoint, log2FC, 1:3)
logFC_PLUS2_min$gene_ID <- rep(rownames(logFC_min),3)
logFC_PLUS2_min$MT <- "MT-"
genesmin <- genes[unique(logFC_PLUS2_min$gene_ID),]
logFC_PLUS2_min$significant <- c(genesmin$t15, genesmin$t1, genesmin$t3)
## Both
both <- rbind(logFC_PLUS2, logFC_PLUS2_min)
both <- both[both$significant == 1,]
both$timepoint[both$timepoint == "t15"] <- "15min"
both$timepoint[both$timepoint == "t1"] <- "1h"
both$timepoint[both$timepoint == "t3"] <- "3h"
both$MT <- relevel(as.factor(both$MT), "MT+")
both$timepoint <- relevel(as.factor(both$timepoint), "15min")
both_min <- both
DE_MIN <- ggplot() +
geom_jitter(aes(y = (both_min$log2FC), x = both_min$timepoint, fill = both_min$MT, shape = both_min$filtered),  size = 1.2,  width = 0.2, height = 0, stroke = 0.6) +
geom_hline(yintercept=(deltalog2), color = "firebrick3") +
geom_hline(yintercept=-(deltalog2), color = "firebrick3") +
xlab("Time point") +
ylab("log2(FC)") +
labs(fill = "Mating Type") +
guides(shape=FALSE, fill = guide_legend(override.aes = list(shape = 21, size = 3))) +
scale_shape_manual(values=c(21,23)) +
scale_fill_manual(values = c("#b83c3c", "#4877c1")) +
theme_bw() +
ggtitle("SRMs") + theme(plot.title = element_text(colour = "#024399", size = 17)) +
theme(plot.title = element_text(hjust = 0.5), legend.position = "bottom")+
coord_cartesian(ylim = c(-11,11)) +
theme(legend.title=element_text(size=13),     legend.text=element_text(size=13), legend.margin=margin(c(0,0,0,0)))
DE_MIN
deltalog2 <- log2(3)
names <- SRP
genes <- res_plus[names,]
rownames(genes) <- names
## MT-
logFC_min <- logFcMatrix_min[names,]
logFC_min$filtered <- "no"
filtered <- names[!(names %in% rownames(logFcMatrix_min))]
filtered_DF <- data.frame(filtered, 0,0, 0, "yes")
rownames(filtered_DF) <- filtered_DF[,1]
filtered_DF <- filtered_DF[-1]
colnames(filtered_DF) <- colnames(logFC_min)
logFC_min <- rbind(logFC_min, filtered_DF)
logFC_min2 <- gather(logFC_min, timepoint, log2FC, 1:3)
logFC_min2$gene_ID <- rep(rownames(logFC_min),3)
logFC_min2$MT <- "MT-"
logFC_min2$significant <- 1
logFC_min2 <- logFC_min2[order(logFC_min2$filtered, decreasing = T),]
## MT+
logFC_plus <- logFcMatrix_plus[names,]
logFC_plus$filtered <- "no"
logFC_PLUS2 <- gather(logFC_plus, timepoint, log2FC, 1:3)
logFC_PLUS2$gene_ID <- rep(rownames(logFC_plus),3)
logFC_PLUS2$MT <- "MT+"
logFC_PLUS2$significant <- c(genes$t15, genes$t1, genes$t3)
## Both
both <- rbind(logFC_PLUS2, logFC_min2)
both <- both[both$significant == 1,]
both$MT <- relevel(as.factor(both$MT), "MT+")
both$timepoint[both$timepoint == "t15"] <- "15min"
both$timepoint[both$timepoint == "t1"] <- "1h"
both$timepoint[both$timepoint == "t3"] <- "3h"
both$timepoint <- relevel(as.factor(both$timepoint), "15min")
both_plus <- both
DE_PLUS <- ggplot() +
geom_jitter(aes(y = (both_plus$log2FC), x = both_plus$timepoint, fill = both_plus$MT, shape = both_plus$filtered),  size = 1.2,  width = 0.2, height = 0, stroke = 0.6) +
geom_hline(yintercept=(deltalog2), color = "firebrick3") +
geom_hline(yintercept=-(deltalog2), color = "firebrick3") +
xlab("Time point") +
ylab("log2(FC)") +
labs(fill = "Mating Type") +
guides(shape=FALSE, fill = guide_legend(override.aes = list(shape = 21))) +
scale_shape_manual(values=c(21,23)) +
theme_bw() +
ggtitle("SRPs") + theme(plot.title = element_text(colour = "#B83C3C", size = 17)) +
theme(plot.title = element_text(hjust = 0.5)) +
scale_fill_manual(values = c("#b83c3c", "#4877c1")) +
coord_cartesian(ylim = c(-11,11))
DE_PLUS
# Loading other significance matrices from the "both" analysis
res_plus <- read.delim("Significance_matrices_for_plotting/SRB_resPlus.txt", sep = "")
res_min <-  read.delim("Significance_matrices_for_plotting/SRB_resMin.txt", sep = "")
deltalog2 <- log2(3)
names <- SRB
## MT+
genes_PLUS <- res_plus[names,]
rownames(genes_PLUS) <- names
logFC_plus <- logFcMatrix_plus[names,]
logFC_PLUS2 <- gather(logFC_plus, timepoint, log2FC, 1:3)
logFC_PLUS2$gene_ID <- rep(rownames(logFC_plus),3)
logFC_PLUS2$MT <- "MT+"
logFC_PLUS2$significant <- c(genes_PLUS$t15, genes_PLUS$t1, genes_PLUS$t3)
## MT-
genes_MIN <- res_min[names,]
rownames(genes_MIN) <- names
logFC_MIN <- logFcMatrix_min[names,]
logFC_MIN2 <- gather(logFC_MIN, timepoint, log2FC, 1:3)
logFC_MIN2$gene_ID <- rep(rownames(logFC_MIN),3)
logFC_MIN2$MT <- "MT-"
logFC_MIN2$significant <- c(genes_MIN$t15, genes_MIN$t1, genes_MIN$t3)
## Both
both <- rbind(logFC_PLUS2, logFC_MIN2)
both <- both[both$significant == 1,]
both$MT <- relevel(as.factor(both$MT), "MT+")
both$timepoint[both$timepoint == "t15"] <- "15min"
both$timepoint[both$timepoint == "t1"] <- "1h"
both$timepoint[both$timepoint == "t3"] <- "3h"
both$timepoint <- factor(both$timepoint, levels = c("15min", "1h", "3h"))
DE_BOTH <- ggplot() +
geom_jitter(aes(y = (both_both$log2FC), x = both_both$timepoint, fill = both_both$MT),  shape = 21, size = 1.2,  width = 0.2, height = 0, stroke = 0.6) +
geom_hline(yintercept=(deltalog2), color = "firebrick3") +
geom_hline(yintercept=-(deltalog2), color = "firebrick3") +
xlab("Time point") +
ylab("log2(FC)") +
labs(fill = "Mating Type") +
guides( fill = guide_legend(override.aes = list(shape = 21))) +
theme_bw() +
ggtitle("SRBs") + theme(plot.title = element_text(size = 17)) +
theme(plot.title = element_text(hjust = 0.5)) +
scale_fill_manual(values = c("#b83c3c", "#4877c1")) +
scale_x_discrete(breaks = c("15min", "1h", "3h"), labels = c("15min", "1h", "3h"), drop = F) +
coord_cartesian(ylim = c(-11,11))
library(xlsx); library(ggplot2)
cpm_plus <- read.delim("Significance_matrices_for_plotting/CPM_PLUS_no_filtering.txt", stringsAsFactors =  F, sep = "", check.names = F)
cpm_min <- read.delim("Significance_matrices_for_plotting/CPM_MIN_no_filtering.txt", stringsAsFactors = F, sep = "", check.names = F)
treat_min <- read.delim("conditions/treatment_MIN.txt", stringsAsFactors =  F, sep = "", check.names = F, header = F)
time_min <- read.delim("conditions/time_MIN.txt", stringsAsFactors = F, sep = "", check.names = F, header =F)
treat_plus <- substr(colnames(cpm_plus),2,2)
time_plus <- substr(colnames(cpm_plus),3,nchar(colnames(cpm_plus))-1)
time_plus[time_plus == "15"] <- 0.25
time_plus <- as.numeric(time_plus)
time_min$V1 <- as.numeric(time_min$V1)
genes <- read.xlsx("SIP responsive - Selected for plotting.xlsx", "Sheet1")
time_all <- c()
treat_all <- c()
gene_ID_all <- c()
mating_type_all <- c()
cpm_all <- c()
description_all <- c()
genes$gene_ID <- as.character(genes$gene_ID)
genes$type <- as.character(genes$type)
for (i in 1:length(genes$gene_ID)){
gene <- as.character(genes$gene_ID[i])
time_all <- c(time_all, time_plus, time_min$V1)
treat_all <- c(treat_all, treat_plus, treat_min$V1)
gene_ID_all <- c(gene_ID_all, rep(genes$gene_ID[i], 54))
description_all <- c(description_all, rep(genes$type[i], 54))
mating_type_all <- c(mating_type_all, rep("MT+", 33), rep("MT-", 21))
cpm_all <- c(cpm_all, as.numeric(cpm_plus[gene,]), as.numeric(cpm_min[gene,]))
}
all <- data.frame(gene_ID_all, time_all, treat_all, description_all, mating_type_all, cpm_all, stringsAsFactors = F)
all$treat_all[all$treat_all == "c"] <- "Control"
all$treat_all[all$treat_all == "t"] <- "SIP"
all <- all[all$time_all != 0,]
all$gene_ID_all <- factor(all$gene_ID_all, levels = unique(all$gene_ID_all))
library(ggplot2)
library(stringr)
all$ID_descr <- paste0(all$gene_ID_all, " #", all$description_all)
#all$ID_descr <- str_wrap(all$ID_descr, width = 17)
all$ID_descr <- gsub("#", "\n", all$ID_descr)
all$ID_descr <- factor(all$ID_descr, levels = unique(all$ID_descr))
for (i in 1:16) {
start <- 1 + (i-1) * 48
all_i <- all[start:(start+47),]
plot <- ggplot(data = all_i) +
geom_point(aes(y = cpm_all, x = time_all, color = treat_all), size = 0.7) +
geom_smooth(aes(y = cpm_all, x = time_all, color = treat_all), se = F, span = 0.6, size = 1.3) +
facet_grid( ~ mating_type_all, scales = "free", space = "free_x", switch = "y") +
ggtitle(all_i$ID_descr) +
#  facet_wrap(gene_ID_all ~ mating_type_all, scales = "free", ncol = 4 ) +
scale_color_manual(values = c("black", "cyan4")) +
theme_bw() +
xlab("time (h)") +
ylab("counts per million (cpm)") +
labs(color = "Treatment") +
scale_x_continuous(breaks = c(0.25,1,3,6,9)) +
theme(plot.title = element_text(size=9), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, vjust = 0.7, hjust = 0.7), legend.position = "bottom", strip.text.y = element_text(angle = 180), axis.title.x = element_blank(), axis.title.y = element_blank())
assign(paste0("plot", as.character(i)), plot)
}
y <- ggplot() +
ylab("counts per million (cpm)")
x <- ggplot() +
xlab("time (h)")
plot16
legend <- get_legend(plot1)
time_all <- c()
treat_all <- c()
gene_ID_all <- c()
mating_type_all <- c()
cpm_all <- c()
description_all <- c()
genes$gene_ID <- as.character(genes$gene_ID)
genes$type <- as.character(genes$type)
for (i in 1:length(genes$gene_ID)){
gene <- as.character(genes$gene_ID[i])
time_all <- c(time_all, time_plus, time_min$V1)
treat_all <- c(treat_all, treat_plus, treat_min$V1)
gene_ID_all <- c(gene_ID_all, rep(genes$gene_ID[i], 54))
description_all <- c(description_all, rep(genes$type[i], 54))
mating_type_all <- c(mating_type_all, rep("MT+", 33), rep("MT-", 21))
cpm_all <- c(cpm_all, as.numeric(cpm_plus[gene,]), as.numeric(cpm_min[gene,]))
}
all <- data.frame(gene_ID_all, time_all, treat_all, description_all, mating_type_all, cpm_all, stringsAsFactors = F)
all$treat_all[all$treat_all == "c"] <- "Control"
all$treat_all[all$treat_all == "t"] <- "SIP"
all <- all[all$time_all != 0,]
all$gene_ID_all <- factor(all$gene_ID_all, levels = unique(all$gene_ID_all))
all$ID_descr <- paste0(all$gene_ID_all, " #", all$description_all)
#all$ID_descr <- str_wrap(all$ID_descr, width = 17)
all$ID_descr <- gsub("#", "\n", all$ID_descr)
all$ID_descr <- factor(all$ID_descr, levels = unique(all$ID_descr))
for (i in 1:16) {
start <- 1 + (i-1) * 48
all_i <- all[start:(start+47),]
plot <- ggplot(data = all_i) +
geom_point(aes(y = cpm_all, x = time_all, color = treat_all), size = 0.7) +
geom_smooth(aes(y = cpm_all, x = time_all, color = treat_all), se = F, span = 0.6, size = 1.3) +
facet_grid( ~ mating_type_all, scales = "free", space = "free_x", switch = "y") +
ggtitle(all_i$ID_descr) +
#  facet_wrap(gene_ID_all ~ mating_type_all, scales = "free", ncol = 4 ) +
scale_color_manual(values = c("black", "cyan4")) +
theme_bw() +
xlab("time (h)") +
ylab("counts per million (cpm)") +
labs(color = "Treatment") +
scale_x_continuous(breaks = c(0.25,1,3,6,9)) +
theme(plot.title = element_text(size=9), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, vjust = 0.7, hjust = 0.7), legend.position = "bottom", strip.text.y = element_text(angle = 180), axis.title.x = element_blank(), axis.title.y = element_blank())
assign(paste0("plot", as.character(i)), plot)
}
y <- ggplot() +
ylab("counts per million (cpm)")
x <- ggplot() +
xlab("time (h)")
plot16
legend <- get_legend(plot1)
library(xlsx); library(ggplot2); library(stringr); library(cowplot)
legend <- get_legend(plot1)
plot1b <- plot1 + theme(legend.position = "none")
plot2b <- plot2 + theme(legend.position = "none")
plot3b <- plot3 + theme(legend.position = "none")
plot4b <- plot4 + theme(legend.position = "none")
plot5b <- plot5 + theme(legend.position = "none")
plot6b <- plot6 + theme(legend.position = "none")
plot7b <- plot7 + theme(legend.position = "none")
plot8b <- plot8 + theme(legend.position = "none")
plot9b <- plot9 + theme(legend.position = "none")
plot10b <- plot10 + theme(legend.position = "none")
plot11b <- plot11 + theme(legend.position = "none")
plot12b <- plot12 + theme(legend.position = "none")
plot13b <- plot13 + theme(legend.position = "none")
plot14b <- plot14 + theme(legend.position = "none")
plot15b <- plot15 + theme(legend.position = "none")
plot16b <- plot16 + theme(legend.position = "none")
#
# plot1b <-  plot1b + theme(plot.margin = margin(l = 0, t = 5.5, r = 5.5, b = 5.5))
# plot2b <-  plot2b + theme(plot.margin = margin(l = 0, t = 5.5, r = 5.5, b = 5.5))
# plot3b <-  plot3b + theme(plot.margin = margin(l = 0, t = 5.5, r = 5.5, b = 5.5))
# plot4b <-  plot4b + theme(plot.margin = margin(l = 0, t = 5.5, r = 5.5, b = 5.5))
y <- y + theme(plot.margin = margin(l = 40, t = 0, r = 0, b = 0))
# plot9b <-  plot9b + theme(plot.margin = margin(l = 5.5, t = 5.5, r = 0, b = 5.5))
# plot10b <-  plot10b + theme(plot.margin = margin(l = 5.5, t = 5.5, r = 0, b = 5.5))
# plot11b <-  plot11b + theme(plot.margin = margin(l = 5.5, t = 5.5, r = 0, b = 5.5))
# plot12b <-  plot12b + theme(plot.margin = margin(l = 5.5, t = 5.5, r = 0, b = 5.5))
#
# plot13b <-  plot13b + theme(plot.margin = margin(l = 0, t = 5.5, r = 5.5, b = 5.5))
# plot14b <-  plot14b + theme(plot.margin = margin(l = 0, t = 5.5, r = 5.5, b = 5.5))
# plot15b <-  plot15b + theme(plot.margin = margin(l = 0, t = 5.5, r = 5.5, b = 5.5))
# plot16b <-  plot16b + theme(plot.margin = margin(l = 0, t = 5.5, r = 5.5, b = 5.5))
both <-  plot_grid(plot1b, plot2b,plot3b,plot4b , align = "v",
nrow = 4,
ncol = 1,
scale = 1)
plus <- plot_grid(plot5b, plot6b,plot7b,plot8b , align = "v",
nrow = 4,
ncol = 1,
scale = 1)
min <- plot_grid(plot9b, plot10b,plot11b,plot12b ,plot13b, plot14b,plot15b,plot16b , align = "v",
nrow = 4,
ncol = 2,
scale = 1)
min
together <- plot_grid( both, plus, min, nrow = 1, ncol = 3, scale = 1, rel_widths = c(0.25,0.25,0.50), labels = c("A", "B", "C"))
togetheranderhalf <- plot_grid(y,together, align = "v", nrow = 1, ncol = 2, rel_widths = c(0.02,0.98))
together2 <- plot_grid(togetheranderhalf, x, legend, align = "h", nrow = 3, ncol = 1, rel_heights = c(0.94, 0.03,0.03) )
together2
ggsave("test.pdf", height = 10, width = 10)
cpm <- cpm[meta$Time != 0]
cpm_plus <- read.delim("Significance_matrices_for_plotting/CPM_PLUS_no_filtering.txt", stringsAsFactors =  F, sep = "", check.names = F)
cpm_min <- read.delim("Significance_matrices_for_plotting/CPM_MIN_no_filtering.txt", stringsAsFactors = F, sep = "", check.names = F)
cpm_minE <- read.delim("Significance_matrices_for_plotting/CPM_EMILIO_no_filtering.txt", stringsAsFactors = F, sep = "", check.names = F)
cpm <- cbind(cpm_plus, cpm_min, cpm_minE)
meta <- read.xlsx("conditions/meta.xlsx", sheetIndex = 1)
genes <- read.xlsx("Selected_genes_comparative_analysis.xlsx", "selected_SR")
genes <- read.xlsx("SIP responsive - Selected for plotting.xlsx", "selected_SR")
cpm <- cpm[meta$Time != 0]
meta <- meta[meta$Time != 0,]
allcpm <- as.numeric(unlist(lapply(genes$gene_ID, function(x) cpm[rownames(cpm) == x,])))
allgenes <- as.character(unlist(lapply(genes$gene_ID, function(x) rep(x, 54))))
alltype <- as.character(unlist(lapply(genes$gene_ID, function(x) rep(genes$type[genes$gene_ID == x], 54))))
allresponse <- as.character(unlist(lapply(genes$gene_ID, function(x) rep(genes$source[genes$gene_ID == x], 54))))
allMT <- rep(meta$MT, nrow(genes))
alltime <- rep(meta$Time, nrow(genes))
alltreatment <- rep(meta$treatment, nrow(genes))
df <- data.frame(CPM = allcpm, gene_ID = allgenes, type = alltype, response = allresponse, MT = allMT, time = alltime, treatment = alltreatment)
# df2 <- aggregate(df[1:2], by = list(df$gene_ID, df$MT, df$type, df$process, df$time, df$treatment), mean)
# colnames(df2) <- c("gene_ID", "MT", "type", "process", "time", "treatment", "CPMus", "CPM")
#
# df2$MTreat <- paste0(df2$treatment, " " , df2$MT)
# df2$MTreat <- factor(df2$MTreat, levels = c("Control MT+", "SIP MT+", "Control MT-", "SIP MT-"))
# df2$labels <- paste0(df2$gene_ID, " ", df2$type)
# df2$process <- factor(df2$process, levels = unique(genes$Process))
# df2$labels <- factor(df2$labels , levels = unique(df2$labels ))
df$MT <- factor(df$MT, levels = c("MT+", "MT-"))
df$gene_ID <- as.character(df$gene_ID)
genes$gene_ID <- as.character(genes$gene_ID)
for (i in 1:nrow(genes)){
gene <- genes$gene_ID[i]
df_gene <- df[df$gene_ID == gene,]
plot <- ggplot(data = df_gene) +
geom_point(aes(y = CPM, x = time, color = treatment), size = 0.6) +
geom_smooth(aes(y = CPM, x = time, color = treatment), se = F, span = 0.4, size = 1.3) +
facet_grid( ~ MT, scales = "free", space = "free_x", switch = "y") +
ggtitle(df_gene$type, subtitle = paste0(df_gene$gene_ID, " ", df_gene$response)) +
#  facet_wrap(gene_ID_all ~ mating_type_all, scales = "free", ncol = 4 ) +
scale_color_manual(values = c("black", "orange")) +
theme_bw() +
xlab("time (h)") +
ylab("counts per million (cpm)") +
labs(color = "Treatment") +
scale_x_continuous(breaks = c(0.25,1,3,6,9, 10)) +
theme(plot.title = element_text(size=11), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, vjust = 0.7, hjust = 0.7, size = 6), legend.position = "bottom", strip.text.y = element_text(angle = 180), axis.title.x = element_blank(), axis.title.y = element_blank(), legend.text = element_text(size = 14), legend.title = element_text(size = 16))
assign(paste0("plot", as.character(i)), plot)
}
plot
library(cowplot)
y <- ggplot() +
ylab("Counts per million (CPM)")
x <- ggplot() +
xlab("time (h)")
leg <- get_legend(plot1)
plot1b <- plot1 + theme(legend.position = "none")
plot2b <- plot2 + theme(legend.position = "none")
plot3b <- plot3 + theme(legend.position = "none")
plot4b <- plot4 + theme(legend.position = "none")
plot5b <- plot5 + theme(legend.position = "none")
plot6b <- plot6 + theme(legend.position = "none")
plot7b <- plot7 + theme(legend.position = "none")
plot8b <- plot8 + theme(legend.position = "none")
plot9b <- plot9 + theme(legend.position = "none")
plot10b <- plot10 + theme(legend.position = "none")
plot11b <- plot11 + theme(legend.position = "none")
plot12b <- plot12 + theme(legend.position = "none")
#
# plot1b <-  plot1b + theme(plot.margin = margin(l = 0, t = 5.5, r = 5.5, b = 5.5))
# plot2b <-  plot2b + theme(plot.margin = margin(l = 0, t = 5.5, r = 5.5, b = 5.5))
# plot3b <-  plot3b + theme(plot.margin = margin(l = 0, t = 5.5, r = 5.5, b = 5.5))
# plot4b <-  plot4b + theme(plot.margin = margin(l = 0, t = 5.5, r = 5.5, b = 5.5))
y <- y + theme(plot.margin = margin(l = 10, t = 0, r = 0, b = 0))
# plot9b <-  plot9b + theme(plot.margin = margin(l = 5.5, t = 5.5, r = 0, b = 5.5))
# plot10b <-  plot10b + theme(plot.margin = margin(l = 5.5, t = 5.5, r = 0, b = 5.5))
# plot11b <-  plot11b + theme(plot.margin = margin(l = 5.5, t = 5.5, r = 0, b = 5.5))
# plot12b <-  plot12b + theme(plot.margin = margin(l = 5.5, t = 5.5, r = 0, b = 5.5))
#
# plot13b <-  plot13b + theme(plot.margin = margin(l = 0, t = 5.5, r = 5.5, b = 5.5))
# plot14b <-  plot14b + theme(plot.margin = margin(l = 0, t = 5.5, r = 5.5, b = 5.5))
# plot15b <-  plot15b + theme(plot.margin = margin(l = 0, t = 5.5, r = 5.5, b = 5.5))
# plot16b <-  plot16b + theme(plot.margin = margin(l = 0, t = 5.5, r = 5.5, b = 5.5))
both <-  plot_grid(plot1b, plot2b,plot3b, plot4b , align = "v",
ncol = 1,
scale = 1)
titleboth <- ggplot()+ggtitle("SRBs") + theme(title = element_text(size = 17))
both2 <- plot_grid(titleboth, both, nrow = 2, rel_heights = c(0.04,0.9))
both2
plus <- plot_grid( plot5b,plot6b, plot7b, plot8b , align = "v",
ncol = 1,
scale = 1)
titleplus <- ggplot()+ggtitle("SRPs") + theme(title = element_text(colour = "#B83C3C", size = 17))
plus2 <- plot_grid(titleplus, plus, nrow = 2, rel_heights = c(0.04,0.9))
min <- plot_grid(plot9b,plot10b,plot11b ,plot12b, align = "v",
ncol = 1,
scale = 1)
titlemin <- ggplot()+ggtitle("SRMs") + theme(title = element_text(colour = "#024399", size = 17))
min2 <- plot_grid(titlemin, min, nrow = 2, rel_heights = c(0.04,0.9))
together <- plot_grid( min2, plus2, both2, nrow = 1, ncol = 3,  rel_widths = c(0.25,0.25,0.25))
together
togetheranderhalf <- plot_grid(y,together, nrow = 1, ncol = 2, rel_widths = c(0.03,0.9))
together2 <- plot_grid(togetheranderhalf, x, leg, nrow = 3, ncol = 1, rel_heights = c(0.94, 0.03,0.05))
ggsave("test.pdf", width = 10, height = 10)
